Onsets
    CNN1
        #model_path = r"C:\Users\Jakob S\AI-Studium\6 Semester\Audio_and_Music_Processing\challenge\trained_models\cnn1.pt"
        #train 20 epochs, cnn1

        fixed threshold(custom_detect_peaks)
            threshold 0.5:  f1-score 0.833941558133436
        fixed threshold + smoothing(custom_detect_peaks2)
            threshold 0.5, window_size 2:   0.8639739355842295
            threshold 0.4, window_size  2:   0.8660277668309816                         #used for final prediction
            threshold 0.3, window_size 2:   0.865986292083449
        adaptive threshold + smoothing(custom_detect_peaks2)
            lamb = 0.4, winsize 1: 0.8620492937521748
            lamb = 0.4, winsize 2: 0.8682685388439372
            lamb = 0.4, winsize 3: 0.8657293278118826
            lamb = 0.4, winsize 4: 0.8653448114013235

            lamb = 0.3, winsize 2: 0.8687202666562578
            lamb = 0.25, winsize 2: 0.8695188520185966
            lamb = 0.2, winsize 2: 0.8699503678113406                                   best_model, but above model performed better on challenge server
            lamb = 0.15, winsize 2: 0.8689458075320877
            lamb = 0.1, winsize 2: 0.867848788083857

    RNN
        #RNN:f1-score 0.786455088685055   hidden_neurons 128 numlayer 2

    CNN2
        #model_path = r"C:\Users\Jakob S\AI-Studium\6 Semester\Audio_and_Music_Processing\challenge\trained_models\cnn2.pt"
        #f1-score 0.8407248444261645    
        #train 30 epochs, cnn2
        #best val loss 0.36096498

Tempo
    CNN2
        #autocorrelation of learned onset function p-value: 0.6768503937007878
        #learned_autocorrelation+flux_autocorrelation p-value:0.6768503937007878

Beats
    Multi-agent approach --> scoring function weak
        0.3184081995350585
        0.34 (after correction)

    CNN Baseline (epochs=0)
        0.31546630601036335
    CNN 1
        0.5948875384887525
        # num_epochs = 10
        # loss_fn = BCEWithLogitsLoss(pos_weight=torch.tensor([100.0]).to(device))
        # score = eval_o(model_path, beats_dataset, model_class=CNN_model2, odf_rate=fps, sr=sr, hoplength=hop, threshold=0.2, type_="beats")
        # without extra training data
    CNN 2
        0.6714160937053629
        # 15 epochs
        # weight 25
        # threshold 0.5
        # with extra training data
    CNN 3
        0.6780535234946411 on extra data
        #0.6850935676402993
        # 20 epochs, best result after 12
        # weight 35
        # threshold 0.5
        # add extra training data
    CNN 4
        0.648
        # 5 epochs
        # weight 30
        # threshold 0.4
        # add extra training data
    CNN 5
        0.6810927147600024
        # 20 epochs
        # weight 30
        # threshold 0.4
        # add extra training data


    Multi-agent 1
        # 0.38208771527252594
        # scoring: 1-variance(inter-beat-intervals)
        # include beats of not near onset
    Multi-agent 2
        # 0.3568790190795902
        # scoring: score_agent
    Multi-agent 3
        # b_score = 0.39295952855131966
        # scoring: overlap to onsets
        # no more branching
    Multi-agent 4
        # 0.45944053007722585
        # scoring: overlap to CNN predicted beats
